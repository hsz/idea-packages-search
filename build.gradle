buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'jacoco'
    id 'org.jetbrains.intellij' version '0.4.1'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

group pluginGroup
version pluginVersion

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'idea'
apply plugin: 'checkstyle'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-swing:$kotlinCoroutinesVersion"
    compile "com.github.kittinunf.fuel:fuel:$fuelVersion"
    compile "com.github.kittinunf.fuel:fuel-coroutines:$fuelVersion"
    compile "com.github.kittinunf.fuel:fuel-gson:$fuelVersion"
    testCompile "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}


intellij {
    version System.getenv().getOrDefault('IDEA_VERSION', ideaVersion)
    type ideaType
    pluginName pluginName
    downloadSources Boolean.valueOf(sources)
    sameSinceUntilBuild Boolean.valueOf(isEAP)
    updateSinceUntilBuild false

    publishPlugin {
        username publishUsername
        password publishPassword
        channels publishChannel
    }
}

checkstyle {
    configFile = new File(rootDir, 'gradle/checkstyle.xml')
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
